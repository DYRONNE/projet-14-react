{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Projects */
    // "incremental": true,                              /* Save .tsbuildinfo files to allow for incremental compilation of projects. */
    // "composite": true,                                /* Enable constraints that allow a TypeScript project to be used with project references. */
    // "tsBuildInfoFile": "./.tsbuildinfo",              /* Specify the path to .tsbuildinfo incremental compilation file. */
    // "disableSourceOfProjectReferenceRedirect": true,  /* Disable preferring source files instead of declaration files when referencing composite projects. */
    // "disableSolutionSearching": true,                 /* Opt a project out of multi-project reference checking when editing. */
    // "disableReferencedProjectLoad": true,             /* Reduce the number of projects loaded automatically by TypeScript. */

    /* Language and Environment */
    "target": "es2016",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": ["dom", "dom.iterable", "esnext"],            /* Include DOM and ESNext APIs for type checking. */
    "jsx": "react-jsx",                                  /* Specify what JSX code is generated. */
    "jsxImportSource": "react",                          /* Specify the module specifier for JSX factory functions. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. */
    "allowSyntheticDefaultImports": true,                /* Allow default imports from modules with no default export. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

    /* Modules */
    "module": "esnext",                                  /* Specify what module code is generated. */
    "moduleResolution": "node",                         /* Use Node.js module resolution strategy. */
    "resolveJsonModule": true,                           /* Enable importing .json files. */
    "isolatedModules": true,                             /* Ensure that each file can be safely transpiled without relying on other imports. */
    "baseUrl": "./",                                     /* Specify the base directory to resolve non-relative module names. */

    /* Emit */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "skipLibCheck": true,                                /* Skip type checking all .d.ts files. */
    "noEmit": true                                       /* Do not emit compiled files. */
  },
  "include": ["src/**/*"],                               /* Include all TypeScript and JavaScript files in the src folder. */
  "exclude": ["node_modules", "build"]                  /* Exclude node_modules and build folders. */
}
